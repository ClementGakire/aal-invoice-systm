// Prisma schema for AAL Invoice Management System
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

// User management
model User {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  role        Role     @default(CLIENT)
  department  String?
  phone       String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  jobs     LogisticsJob[]
  invoices Invoice[]

  @@map("users")
}

enum Role {
  ADMIN
  FINANCE
  OPERATIONS
  CLIENT
}

// Client management
model Client {
  id      String  @id @default(cuid())
  name    String
  address String?
  phone   String?
  tin     String? // Tax Identification Number

  // Relations
  jobs     LogisticsJob[]
  invoices Invoice[]

  @@map("clients")
}

// Supplier management
model Supplier {
  id      String  @id @default(cuid())
  name    String
  contact String?

  // Relations
  expenses Expense[]

  @@map("suppliers")
}

// Service items
model ServiceItem {
  id       String  @id @default(cuid())
  name     String
  price    Float
  currency String  @default("USD")
  vat      Boolean @default(false)

  @@map("service_items")
}

// Logistics Jobs
model LogisticsJob {
  id               String   @id @default(cuid())
  jobNumber        String   @unique
  title            String
  clientId         String
  status           JobStatus @default(OPEN)
  jobType          JobType
  portOfLoading    String
  portOfDischarge  String
  grossWeight      Float?
  chargeableWeight Float?
  shipper          String?
  consignee        String?
  package          String?
  goodDescription  String?
  plateNumber      String?
  containerNumber  String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Air Waybill fields
  masterAirWaybill String?
  houseAirWaybill  String?

  // Bill of Lading fields
  masterBL String?
  houseBL  String?

  // Relations
  client   Client    @relation(fields: [clientId], references: [id])
  user     User?     @relation(fields: [userId], references: [id])
  userId   String?
  invoices Invoice[]
  expenses Expense[]

  @@map("logistics_jobs")
}

enum JobStatus {
  OPEN
  IN_PROGRESS
  DELIVERED
  CANCELLED
}

enum JobType {
  AIR_FREIGHT
  SEA_FREIGHT
  ROAD_FREIGHT
}

// Invoice management
model Invoice {
  id            String   @id @default(cuid())
  number        String   @unique
  clientId      String
  jobId         String?
  jobNumber     String?
  bookingNumber String?
  status        InvoiceStatus @default(PENDING)
  invoiceDate   DateTime
  dueDate       DateTime?
  subTotal      Float
  total         Float
  currency      String   @default("USD")
  amountInWords String?
  remarks       String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  client    Client            @relation(fields: [clientId], references: [id])
  job       LogisticsJob?     @relation(fields: [jobId], references: [id])
  user      User?             @relation(fields: [userId], references: [id])
  userId    String?
  lineItems InvoiceLineItem[]

  @@map("invoices")
}

enum InvoiceStatus {
  DRAFT
  PENDING
  PAID
  UNPAID
  OVERDUE
  CANCELLED
}

// Invoice line items
model InvoiceLineItem {
  id            String  @id @default(cuid())
  invoiceId     String
  description   String
  basedOn       String  // e.g., "Qty & UOM", "Shipment"
  rate          Float
  currency      String  @default("USD")
  amount        Float
  taxPercent    Float?
  taxAmount     Float?
  billingAmount Float

  // Relations
  invoice Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  @@map("invoice_line_items")
}

// Expense management
model Expense {
  id           String  @id @default(cuid())
  title        String
  amount       Float
  currency     String  @default("USD")
  jobNumber    String?
  supplierId   String?
  supplierName String?
  jobId        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  supplier Supplier?     @relation(fields: [supplierId], references: [id])
  job      LogisticsJob? @relation(fields: [jobId], references: [id])

  @@map("expenses")
}
